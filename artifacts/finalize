#!/bin/sh

# set -e

DEB_ARCH=
UNAME_M=$(uname -m)

if [ "$UNAME_M" = "i686" ]; then
    echo "running on 32bit system"
    DEB_ARCH="i386"
elif [ "$UNAME_M" = "x86_64" ]; then
    DEB_ARCH="amd64"
    echo "running on 64bit system"
else
    echo "ERROR: unsupported architecture"
    exit 1
fi

# cannot use 'source' here, only shorthand available
. /lib/chroot-setup.sh 

# setup chroot enviromment
chroot_setup

# should be preseeded.
# apt-get install initramfs-tools

# 
# echo "apt-get update"
# chroot /target apt-get update

# install deb packages
echo "install linux-image"
chroot /target dpkg -i /media/usb0/boot/deb/linux-image-2.6.39.001_001_${DEB_ARCH}.deb

echo "install spl"
chroot /target dpkg -i /media/usb0/boot/deb/spl_0.6.5.3-1_${DEB_ARCH}.deb

echo "install zfs"
chroot /target dpkg -i /media/usb0/boot/deb/zfs_0.6.5.3-1_${DEB_ARCH}.deb

echo "install libnvpair"
chroot /target dpkg -i /media/usb0/boot/deb/libnvpair1_0.6.5.3-1_${DEB_ARCH}.deb

echo "install libuutil"
chroot /target dpkg -i /media/usb0/boot/deb/libuutil1_0.6.5.3-1_${DEB_ARCH}.deb

echo "install libzfs"
chroot /target dpkg -i /media/usb0/boot/deb/libzfs2_0.6.5.3-1_${DEB_ARCH}.deb

echo "install libzpool"
chroot /target dpkg -i /media/usb0/boot/deb/libzpool2_0.6.5.3-1_${DEB_ARCH}.deb

echo "install zfs-initramfs"
chroot /target dpkg -i /media/usb0/boot/deb/zfs-initramfs_0.6.5.3-1_${DEB_ARCH}.deb

echo "depmod"
chroot /target depmod -a

# install boot link
echo "install boot links and cmdline"
chroot /target /bin/bash -c "cd /boot; ln -s vmlinuz-2.6.39.001 bzImage"
chroot /target /bin/bash -c "cd /boot; ln -s initrd.img-2.6.39.001 ramdisk"
echo "console=tty0 console=ttyS0,115200 root=/dev/mmcblk0p1 rootwait" > /target/boot/cmdline

# cleanup chroot
chroot_cleanup # umount automatically

#
echo "all jobs done, my lord."


